---
// Navigation component
---

<div id="navbar-container" class="top-10 w-full">
  <nav id="navbar" class="bg-gradient-to-r from-blue-600 to-purple-700 p-6 shadow-lg relative">
    <div class="flex items-center justify-between w-full container mx-auto px-4">
      <a href="/" class="flex items-center space-x-2">
        <div class="bg-white p-2 rounded-lg">
          <svg class="w-6 h-6 text-blue-600" fill="currentColor" viewBox="0 0 24 24">
            <path d="M12 2L2 7l10 5 10-5-10-5zM2 17l10 5 10-5M2 12l10 5 10-5"/>
          </svg>
        </div>
        <span class="text-white text-xl font-bold">WEBACELA INC.</span>
      </a>
      
      <!-- Navigation Links - Desktop -->
      <div class="hidden md:flex space-x-8">
        <a href="/" class="text-white hover:text-blue-200 transition-colors duration-200 font-medium">Home</a>
        <a href="/blog" class="text-white hover:text-blue-200 transition-colors duration-200 font-medium">Blog</a>
        <a href="/about" class="text-white hover:text-blue-200 transition-colors duration-200 font-medium">About</a>
        <a href="/contact" class="text-white hover:text-blue-200 transition-colors duration-200 font-medium">Contact</a>
      </div>
      
      <!-- Mobile menu button -->
      <div class="md:hidden">
        <button 
          id="mobile-menu-button" 
          class="text-white p-2 rounded-lg hover:bg-white hover:bg-opacity-20 transition-colors duration-200"
          aria-label="Toggle mobile menu"
          aria-expanded="false"
          aria-controls="mobile-menu"
        >
          <svg id="hamburger-icon" class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24" aria-hidden="true">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
          </svg>
          <svg id="close-icon" class="w-6 h-6 hidden" fill="none" stroke="currentColor" viewBox="0 0 24 24" aria-hidden="true">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
          </svg>
        </button>
      </div>
    </div>
  
    <!-- Mobile Menu -->
    <div id="mobile-menu" class="md:hidden absolute top-full left-0 right-0 mt-2 mx-4 bg-white rounded-2xl shadow-xl overflow-hidden transform opacity-0 scale-95 transition-all duration-200 pointer-events-none z-50">
      <div class="py-4">
        <a href="/" class="block px-6 py-3 text-gray-800 hover:bg-blue-50 hover:text-blue-600 transition-colors duration-200 font-medium border-b border-gray-100">Home</a>
        <a href="/blog" class="block px-6 py-3 text-gray-800 hover:bg-blue-50 hover:text-blue-600 transition-colors duration-200 font-medium border-b border-gray-100">Blog</a>
        <a href="/about" class="block px-6 py-3 text-gray-800 hover:bg-blue-50 hover:text-blue-600 transition-colors duration-200 font-medium border-b border-gray-100">About</a>
        <a href="/contact" class="block px-6 py-3 text-gray-800 hover:bg-blue-50 hover:text-blue-600 transition-colors duration-200 font-medium">Contact</a>
      </div>
    </div>  
  </nav>
</div>

<script>
  // Mobile menu toggle functionality
  const mobileMenuButton = document.getElementById('mobile-menu-button');
  const mobileMenu = document.getElementById('mobile-menu');
  const hamburgerIcon = document.getElementById('hamburger-icon');
  const closeIcon = document.getElementById('close-icon');
  const navbarContainer = document.getElementById('navbar-container');
  const navbar = document.getElementById('navbar');
  
  let isMenuOpen = false;
  let lastScrollTop = 0;
  
  function toggleMobileMenu() {
    if (!mobileMenu || !hamburgerIcon || !closeIcon || !mobileMenuButton) return;
    
    isMenuOpen = !isMenuOpen;
    
    // Update aria-expanded attribute
    mobileMenuButton.setAttribute('aria-expanded', isMenuOpen.toString());
    
    if (isMenuOpen) {
      // Show menu
      mobileMenu.classList.remove('opacity-0', 'scale-95', 'pointer-events-none');
      mobileMenu.classList.add('opacity-100', 'scale-100');
      hamburgerIcon.classList.add('hidden');
      closeIcon.classList.remove('hidden');
    } else {
      // Hide menu
      mobileMenu.classList.add('opacity-0', 'scale-95', 'pointer-events-none');
      mobileMenu.classList.remove('opacity-100', 'scale-100');
      hamburgerIcon.classList.remove('hidden');
      closeIcon.classList.add('hidden');
    }
  }
  
  // Fixed navigation on scroll functionality
  function handleScroll() {
    if (!navbarContainer || !navbar) return;
    
    const scrollTop = window.pageYOffset || document.documentElement.scrollTop;
    
    if (scrollTop > 50) {
      // Make navbar fixed and compact when scrolling down
      navbarContainer.classList.add('fixed', 'top-0', 'left-0', 'right-0', 'z-50');
      navbarContainer.classList.remove('top-10');
      navbar.classList.add('py-3');
      navbar.classList.remove('p-6');
      navbar.style.boxShadow = '0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)';
    } else {
      // Return to original state when at top
      navbarContainer.classList.remove('fixed', 'top-0', 'left-0', 'right-0', 'z-50');
      navbarContainer.classList.add('top-10');
      navbar.classList.remove('py-3', 'backdrop-blur-md', 'bg-opacity-95');
      navbar.classList.add('p-6');
      navbar.style.boxShadow = '';
    }
    
    lastScrollTop = scrollTop;
  }
  
  // Add scroll event listener
  window.addEventListener('scroll', handleScroll);
  
  // Toggle menu when button is clicked
  if (mobileMenuButton) {
    mobileMenuButton.addEventListener('click', toggleMobileMenu);
  }
  
  // Close menu when clicking outside
  document.addEventListener('click', (event) => {
    if (isMenuOpen && mobileMenuButton && mobileMenu && event.target instanceof Node) {
      if (!mobileMenuButton.contains(event.target) && !mobileMenu.contains(event.target)) {
        toggleMobileMenu();
      }
    }
  });
  
  // Close menu when pressing Escape key
  document.addEventListener('keydown', (event) => {
    if (event.key === 'Escape' && isMenuOpen) {
      toggleMobileMenu();
    }
  });
  
  // Close menu when clicking on a menu item
  if (mobileMenu) {
    const mobileMenuLinks = mobileMenu.querySelectorAll('a');
    mobileMenuLinks.forEach(link => {
      link.addEventListener('click', () => {
        if (isMenuOpen) {
          toggleMobileMenu();
        }
      });
    });
  }
</script>
